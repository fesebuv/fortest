if (typeof __decorate !== "function") __decorate = function (decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);
        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);
        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);
    }
};
if (typeof __metadata !== "function") __metadata = function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
if (typeof __param !== "function") __param = function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var angular2_1 = require('angular2/angular2');
// TODO: write unit tests
// TODO: move view template into file (template bundling in build step needed)
var Progressbar = (function () {
    function Progressbar(value, max) {
        this.value = value || 0;
        this.max = max || 100;
    }
    Progressbar.prototype._computePercentWidth = function (value) {
        this.percentWidth = +(100 * value / this.max).toFixed(2) + '%';
    };
    Progressbar.prototype.onChange = function (changes) {
        if (changes['value']) {
            this._computePercentWidth(changes['value'].currentValue);
        }
    };
    Progressbar = __decorate([
        angular2_1.Component({
            selector: 'boot-progressbar',
            properties: ['value'],
            lifecycle: [angular2_1.onChange],
            directives: [angular2_1.coreDirectives]
        }),
        angular2_1.View({
            template: "\n  <div class=\"progress\">\n    <div class=\"progress-bar\" role=\"progressbar\"\n      [style.width]=\"percentWidth\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n      <content></content>\n      <span class=\"sr-only\">{{percentWidth}}</span>\n    </div>\n  </div>\n  "
        }),
        __param(0, angular2_1.Attribute('value')),
        __param(1, angular2_1.Attribute('max')), 
        __metadata('design:paramtypes', [Object, Object])
    ], Progressbar);
    return Progressbar;
})();
exports.Progressbar = Progressbar;

//# sourceMappingURL=../../components/progressbar/progressbar.js.map